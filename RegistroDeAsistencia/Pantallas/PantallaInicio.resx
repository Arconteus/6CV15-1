<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANkAAAClCAYAAADRXljMAAAABGdBTUEAALGPC/xhBQAACcZJREFUeF7t
        nU2LG1cWhv0P7J29dRtbLanVUrctyU1LLbkthP+FF4FAFoaAFwMDWQQMXgQGsggYshgwZBFo8GIgkIVh
        IJCFYVb5BVnPj0jOCbdnOp03dkp969Z5S+8DD6dk90e9RUtVdet+XBNCCCGEEEIIIYQQQgghhBBCCCGE
        EEIIIYQQQgghBBPr9frpZDJ51e/339rLX6SsYq/X+/dyuXxu2+Iyq9Xqk+FweHbjxo3/2kt4AKX8K966
        devnwWDw3fHx8Ut7vd3YQfii0+n8xzbhwZIyh/6Gs7p9+KfMzs7OT7YJD4yUOd3b2/v+6OjoH7a9HXS7
        3R+swIMhZd0uFou/W20v/oliBYaXspR+q2K1XazX64/UqCEjOZvNXlhtFTColA3bDtInBgooZaO2ojFk
        Op1+ZQUGlDKCbbhshMGkjGJ6lEQNDCZlMDlJ17sokJShpG3SHw6Hb6zAUFJGMv2tcuHPxbyjpm3CUFJG
        0p/hnp6efmrbPKhVUbLpo0Cs8qD+iZJUKlAAKaNLBQogZXSpQAGkjC4VKICU0aUCBZAyulSgAFJGlwoU
        QMroUoECSBldKlAAKaNLBQogZXSpQAHo9E7OPsOWT5CprmJbIRUoQHi9N7Z3FF0ul3+z1xCfUtzHH92/
        f/+faXZa+LMkpVSgACH1M1SOYQ6Hh4evrcDfIWmkAgUI5/7+/r+sZmM+n39mBf4uSSEVKEAY656hyC8p
        fRkf24S/X4aVChQghGlAaSngPsiwUoECNO56vf7YalG0PBSVVKAAEWyENLQd7Y+MJRUoQGP62cQn97Ht
        JoH7JkNJBQrQpI0zHo+/toL2TcaRChSgESMtKsBw2egP5O3M/87nIkyeIUej0bcXPTg4+Oail///3D/7
        /sva17zx6j/Lt73nje8X2ueMUoECFDfoPOdwXxuWkhoek1CBAhQ34tKl/X7/rRW4v024Wq2eWaUl89rj
        VKAARc3dmyMXad51uM8NSU36IEW5NpEKFKCoTTwT+6v4fY8VuN8lbcOyQU7GqwMqUIDShiVKZ2JvWLBK
        jzekWIEZK0oFClDa6KB9LqaPPpjP55/bNj3eAmkF5qwoFShAaUOzu7v7oxW030X0lrlWrJlspPtvmLOi
        VKAApQ2NP/exgva7tNSke2+UaxOpQAFKG5p0P4T2u6h063JdwN5gTzN3wKYCBShtaHz6Aitov4vK3MJY
        Qw8QKlCA0oYm4816Nv0S1ls+/V7N5zl5n/586iqinwl87tW/3gfC+qVhzX1AqUABShuajDfrMp9UoACl
        DY2mmAspFShAaUOT+YZd5pEKFKC0ocncsVXmkQoUoLTRQfssm5UKFKCokYdwRHlGJv8gFShAUVNTbzg0
        AWpoqUABipq6LYUj+vz5/X7/+16v9/Z8moC69Ifx79O+5o0/S/TtNAXBme3bd9evX69zmBAVKEBxgw7l
        gPsaRAqOj48/v3v3bh2ts1SgAE0ZBu+1YAXtY6Oyjivzs64VmGlDqUABGjFdnjWOd1WKMiL6ktRk7mZF
        BQrQmA8fPvzSamN43zsrcN+a1O9zrNLj95BWYMaKUoECNGqTrY0Re3ekS61WMJlMXlmBOStKBQrQuE3M
        YOVL4lqB+9Ok6Q+zFaSlsGDOilKBAoSwZNO+N0NbgfvRtN1u1ycGbQVpOSyYs6JUoABh9CnE6pxEJuMn
        a63evn27LVPC5WplpAIFCGcdCwJGHIz5Aak5OTnxRfRRrk2kAgUIqTdK+Ohb274S3oLIuIQt89yL/lDa
        Csy1oVSgABRWea7Wpo6+TA0haU3uOtYUoAIFoNEfGnuTv99bXVw80GdH8ns5/4MMNKVbFu/du/fOc6Ve
        KWHxs5f3Z7RNmOOKUoECSBldKlAAKaNLBQogZXSpQAGkjC4VKICU0aUCBZAyulSgAJR6c7538j3XXwcd
        F5ZVH+Z/FW/evPlzDv1nof2rSSpQgJD2er0fDg4OzqbT6Stfz/nk5OSFPwtbLBafuY8ePfpt3vbHjx8/
        d33b/82/9lz/ntls9nIymXw9GAzesr8J/UGvP4/KoU8c5HqPmHO9K9TF18jz73Pt57z0Z2OdTqfuNd2o
        QAGK2/Rgzcv46Og7d+6Em9Q0dWimwpd8quFNRwUKUNQnT548tRoSP2tagftd2jo6SZfCe+BYgbk2lAoU
        oIjj8di73FAwGo0ijDejJk2hgHJtIhUoQK3avRDzcHqYqW7TtGr0ZHyjUYEC1GY6I9Dii9vt7+8Xn/Q0
        dbSlxxtGrMCMFaUCBchuurdpFfapXGxxwLbM86E3WU2mVrq2AjPnti1vsqOjoy+swIwVpQIFyKY/k7La
        agpOI0eNtzD6Q2vbRNmqSgUKkNPW48/UrKDsWY0+SPNDZO4RQgUKkMV5jbNMRWOxWNS+zFJau5qSGqZ/
        oAIFuLLpj26rSI8m4PHIpTflHx4evvbuTKenp8+8N4X9e6P4tA9+KZgeOP8PP/NOp9Mva1rYngoU4Eqm
        Ju6tpInm/S2VChRgY1OH263FOyZbgcdGZpUKFGBj0x/ZtgOPjcwqFSjARj548OC11a3Hh9dYgcdIZpMK
        FGAj2ZuYc5KG7sDjJLNIBQqwqeL3oGMk80gFClBZH7VsVfweeKxkFqlAASrpLYo+rN+2xQUYF7UgkgoU
        oJLsw1fqItKo6hZKBQpQyTYOY8mBWhlrlQoUoJLRJsGJgt5ktUoFClBJ3Y9hUgdpeMzklaUCBajkNowZ
        2wS9yWqVChSgkkyzTpWkxPCXLZYKFKCSPhuvVXEJvclqlQoUoLI5FkxvG4eHh61ZpzqgVKAAlfU56q2K
        C3S73brng99mqUABNlLDXP5PagyCx0lmkQoUYGPTpDJbi7co+rJNtgmPj8wmFSjAlfTLJO8F4vdp2zD8
        xRfM8DNXqVmr5G9SgQJIGV0qUAApo0sFCiBldKlAAaSMLhUogJTRpQIFkDK6VKAAUkaXChRAyuhSgQJI
        GV0qUAApo8tDWiAChZAypIPBgGvVoIODg2+swDBSRvT4+NjXnebBO/Cq17hkkXa10XT6haGkjOTe3p6v
        ZsqHnX41wFBSOJ1Ov7JKCwwlZTB5qWnxbCmzORqNfGIiXnwV/XS9CwNK2aR0zfZ/xmq1emYFhpSySZfL
        ZXsmaep0Ou+swKBSNmi70P2ZjCR7iyJkvV4/tQIDS1nSnZ2dn6y2Fz2klk25u7v7Y6vuw96HndU+tgIP
        hJS59TfX1k6QO5lMtP6xrNXxeKzVgRw/hesyUuaU/iFzXcxmsxd+ardNeOCk/JDD4fBsPp/7Gm5CCCGE
        EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCFEA1y79ivOv3DUXPYv8wAAAABJRU5ErkJggg==
</value>
  </data>
</root>